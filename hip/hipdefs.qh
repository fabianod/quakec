#define HIPNOTIC 1
#undef ID1
//#pragma target Standard

/* Level pack definitons
   Copyright (c)1996 Hipnotic Interactive, Inc.
   All rights reserved.
   Do not distribute.
*/

//entity	nullentity;
//entity	bulletholes;
//entity	lastbullet;
//float		numbulletholes;
//float		footsteps;
float		visible_distance;
float		modelindex_hammer;
float		NumProximityGrenades;
float		NumGremlins;
float		NumSpawnGremlins;

.float		run_straight;
.void()		th_turn;
.float		wetsuit_finished;
.float		wetsuit_time;
.float		empathy_finished;
.float		empathy_time;
.float		empathy_sound;
.float		pcolor;

//
// Hipnotic entries
//
// have to use a new items flag because we ran out of bits in the original
.float		items2;
// gremlin stuff
.float		gorging;
.float		stoleweapon;
.entity		lastvictim;
// spawn variables
.void()		spawnfunction;
.string		spawnclassname;
.float		spawnsolidtype;
.string		spawnmodel;
.void()		spawnthink;
.entity		spawnmaster;
.vector		spawnmins;
.vector		spawnmaxs;
.float		spawnsilent;
.float		spawnmulti;
// horn of conjuring
.float		charmed;
.entity		charmer;
.float		huntingcharmer;
// laser cannon
.vector		old_velocity;
//misc
.float		duration;
// used for linked list of entities
.entity		next_ent;
// Mjolnir
.float		struck_by_mjolnir;
// teleport invulnerability
.float		last_teleport_time;

// Rotation
.vector		neworigin;
.vector		rotate;
.float		endtime;
.float		rotate_type;
.string		path;
.string		group;
.string		event;

// Miscellaneous
.float		gravity;

//MED 01/05/97 added discharge variable
//float		discharged;
//MED 01/05/97 added hipnotic decoy
entity		hipdecoy;

float		horn_active;
entity		horn_charmer;

entity		tesla_target;
float		tesla_numtargets;
float		earthquake;
float		quakeactive;


//
// Hipnotic's Prototypes
//
void() StopEarthQuake;
void(float value) EarthQuakeTime;
void() earthquake_postthink;
void() earthquake_prethink;
float(entity counter) counter_GetCount;
vector(vector ang) SUB_NormalizeAngles;
void(entity srcent, entity destent) SUB_CopyEntity;
//multi explosion
void(vector loc, float rad, float damage, float dur, float pause, float vol) multi_explosion;
void(string targ, vector orig) become_decoy;


//void(vector origin, vector dir, float color, float count, float lifespan) particlestream = #79;

void() RotateTargets;
void() RotateTargetsFinal;
void() SetTargetOrigin;
void() LinkRotateTargets;
